name: List & Style Check

on:
  push:
    paths:
      - '*.py'
      - client/**
      - server/**
      - gui/**

  workflow_dispatch:

jobs:

  # JOB to run change detection
  Check_changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
    - uses: actions/checkout@v3

    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          backend:
            - '*.py'
            - 'client/**'
            - 'server/**'
          frontend:
            - 'gui/**'

  Python_Linting:
    needs: Check_changes
    if: ${{ needs.Check_changes.outputs.backend }}
    strategy:
        fail-fast: false
        matrix:
          python-version: ['3.8', '3.9', '3.10', '3.11', '3.x']
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v3

        - uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}
            architecture: x64

        - name: Install Dependencies from requirements.txt
          run: |
            python -m pip install -r requirements_linux.txt
            python -m pip install pylint pycodestyle

        - name: Run Linting
          run: |
            pylint --exit-zero -f colorized hulk_launcher.py utils.py client server

        - name: Code Style Checks
          run: |
            pycodestyle hulk_launcher.py utils.py client server

  Node_Linting:
    needs: Check_changes
    if: ${{ needs.Check_changes.outputs.frontend }}
    runs-on: ubuntu-latest
    env:
      working-directory: './gui'
    steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-node@v3
          with:
            node-version: 18.7.0
            architecture: x64
        - name: Install Dependencies from package.json
          working-directory: ${{ env.working-directory }}
          run: |
            npm install
        - name: Run Linting
          working-directory: ${{ env.working-directory }}
          run: |
            npm run lint
